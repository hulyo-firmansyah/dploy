# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  node: circleci/node@5.0.3

jobs:
  build:
    executor:
      name: node/default
      tag: '14.17.0'
    docker:
      - image: mcr.microsoft.com/playwright:v1.27.1-focal
    steps:
      - checkout
      # look for existing cache and restore if found
      # - restore_cache:
      #     key: v1-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Installing dependency
          command: yarn install
      - run:
          name: Building apps
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - "project"
      # save any changes to the cache
      # - save_cache:
      #     key: v1-deps-{{ checksum "yarn.lock" }}
      #     paths: 
      #       - node_modules
  test1:
    executor:
      name: node/default
      tag: '14.17.0'
    docker:
      - image: mcr.microsoft.com/playwright:v1.27.1-focal
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      # - restore_cache:
      #     key: v1-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Run tests
          command: yarn test
      # save any changes to the cache
      # - save_cache:
      #     key: v1-deps-{{ checksum "yarn.lock" }}
      #     paths: 
      #       - node_modules
      #       - .next
  test:
    executor:
      name: node/default
      tag: '14.17.0'
    docker:
      - image: mcr.microsoft.com/playwright:v1.27.1-focal
    steps:
      - checkout
      # look for existing cache and restore if found
      - restore_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Installing dependency
          command: yarn install
      - run:
          name: Building apps
          command: yarn build
      # save any changes to the cache
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths: 
            - node_modules   
            - ./.next/cache
      - run:
          name: Run tests
          command: yarn test
      - store_test_results:
          path: results.xml
  test2:
    docker:
      - image: cimg/base:2022.03
    steps:
      - run: echo "TEST 2 Passed"
  deploy:
    docker:
      - image: cimg/base:2022.03
    steps:
      - run: echo "Deployed"

workflows:
  test_and_deploy:
    jobs:
      - build
      - test1:
          requires:
            - build
      - test2:
          requires:
            - test1
      - hold:
          type: approval
          requires:
            - test2
      - deploy:
          requires:
            - hold